import Solution._
import cmpsci220.hw.sudoku._

class TestSuite extends org.scalatest.FunSuite {
	val fromCS121_1 = "85....4.1......67...21....3..85....7...982...3....15..5....43...37......2.9....58"
	val fromCS121_2 = ".1.....2..3..9..1656..7...33.7..8..........89....6......6.254..9.5..1..7..3.....2"
	val puz1 = ".43.8.25.6.............1.949....4.7....6.8....1.2....382.5.............5.34.9.71."
	val puz2 = "2...8.3...6..7..84.3.5..2.9...1.54.8.........4.27.6...3.1..7.4.72..4..6...4.1...3"
	val board01 = parse(".89742361.12986475647315289.68..3517...157.2675126.943936821754124579638875634192")
	val board_easy = parse(".6.3..8.4537.9.....4...63.7.9..51238.........71362..4.3.64...1.....6.5231.2..9.8.")
	
	test("parse") {
		assert(parse("..3.2.6..9..3.5..1..18.64....81.29..7.......8..67.82....26.95..8..2.3..9..5.1.3..").valueAt(1,0) == Some(9))
	}

	test("full board isSolved for some invaled, but fully filled board") {
		assert(parse("233383333363373384333533239333135438333333333432736333331337343723343363334313333").isSolved)
	}

	test("board isUnsolvable") {
		assert(parse("233.83333363373384333533239333135438333333333432736333331337343723343363334313333").isUnsolvable)
	}

	test("given test boards are solvable") {
		assert(!parse(fromCS121_1).isUnsolvable)
		assert(!parse(fromCS121_2).isUnsolvable)
		assert(!parse(puz1).isUnsolvable)
		assert(!parse(puz2).isUnsolvable)
	}

	test("place works correctly") {
		assert((board01.place(0,0,5)).valueAt(0,0) == Some(5))
		assert((board01.place(0,0,5)).valueAt(1,0) == Some(3))
		assert((board01.place(1,0,3)).valueAt(1,0) == Some(3))
	}

	test("solved works for solved board") {
		val sudoku = board01
		println(sudoku.toString2)
		val Some(sudokuSolution) = board01.solve
		println(sudokuSolution.toString2)
	}

	test("solve for easy") {
		val sudoku = board_easy
		println(sudoku.toString2)
		val Some(sudokuSolution) = board_easy.solve
		println(sudokuSolution.toString2)
	}

	test("Test Solved"){
		val fromCS121_1 = //fail
		parse("85....4.1......67...21....3..85....7...982...3....15..5....43...37......2.9....58")
		val fromCS121_2 = //solved
		parse(".1.....2..3..9..1656..7...33.7..8..........89....6......6.254..9.5..1..7..3.....2")
		val cmpsci220_1 = //fail
		parse("2...8.3...6..7..84.3.5..2.9...1.54.8.........4.27.6...3.1..7.4.72..4..6...4.1...3")
		val cmpsci220_2 = 
		parse("..3.2.6..9..3.5..1..18.64....81.29..7.......8..67.82....26.95..8..2.3..9..5.1.3..")		
		// https://piazza.com/class/hvp6pl9zbhk281?cid=1079
		val e26 = // fail
		parse(".......63..92....5.5.38.91..2..7.59.5.41.97.6.91.5..8..63.15.7.8....61..91.......")
		val e27 = //solved
		parse("....4.....58.1..76.79.6..21..4..32.8...4.2...3.76..9..54..2.79.76..3.84.....5....")
		val e28 = // fail
		parse("..........62894....85.6..2..59..87...2.....8...47..29..9..5.87....41695..........")
		val e29 = // fail
		parse("1.84.6....5..7.26..9......3....9..84..56.87..48..1....9......2..12.6..5....8.94.6")
		val e30 = //solved
		parse("..4.85.96.5..69...3.....2.8..7..8.....2...7.....4..5..7.1.....3...93..4.93.71.8..")
		// ---
		val solvable1 =  //solved
		parse(".2.81.74.7....31...9...28.5..9.4..874..2.8..316..3.2..3.27...6...56....8.76.51.9.")
		val solvable2 = //solved
		parse("..3.2.6..9..3.5..1..18.64....81.29..7.......8..67.82....26.95..8..2.3..9..5.1.3..")
		val solvable3 = //solved
		parse("74....1.8........7351.7......91..4.6..74.25..1.4..58......1.7839........8.2....49")
		val solvable4 = //solved
		parse("..89...722..8...1..4.123...6.2.......9.3.6.4.......6.8...538.6..3...7..576...21..")
		val solvable5 = //solved
		parse("9...........84.67.4..6.52..647.....8..82.34..3.....569..31.4..6.64.98...........4")
		val solvable6 = //solved
		parse("1..92....524.1...........7..5...81.2.........4.27...9..6...........3.945....71..6") 		
		val sudoku7 = //solved
		parse("...6..9.536..1.87....43.1.64....3.5...........5.1....39.2.61....75.8..626.8..5...") 		
		val sudoku8 = //fail
		parse("...1.9...89..6.74.4.6.3.....3..5...1.8.3.6.7.5...7..8.....9.4.5.62.8..17...6.7...")
		val sudoku9med = //fail
		parse(".583.7.....4..82..73....4...93...7..48..1..36..6...85...1....48..71..5.....8.916.")
		val sudoku10med = // solved
		parse("91....2...5...2.96.8.9.5.7...4..6..3..6.9.1..1..7..9...4.5.1.3.37.6...4...5....12")
		val sudoku11med = // fail
		parse("3....56.86...8.......96.24......298..62...15..451......13.28.......5...12.96....3")
		val sudoku12med = // solved
		parse("..9813..7.....5.1.......4.9....2.63.27.3.8.41.68.9....7.4.......3.7.....8..4361..")
		val sudoku13hard= // solved
		parse("3.2.6.8.75.6.28....7...3.9.6.7.......3.....1.......7.9.8.6...4....28.1.31.9.3.2.8")
		val sudoku14hard = // solved
		parse("..56...34...8.3..7.34....194......5...61.27...2......315....47.7..2.4...94...13..")
		val sudoku15hard = // fail
		parse("..1..73.8.....5...632....9.2..7..41...58.49...43..1..6.1....832...3.....3.75..1..")
		val sudoku16hard = // fail
		parse(".13.5...7.......1897.2..3.48...1.2.....8.6.....9.7...11.7..3.4234.......2...4.78.")
		val sudoku17vHard= // fail
		parse(".2..9.1..3....672..4.3..5..9.....41...34.18...61.....2..4..9.7..371....5..8.5..4.")
		val sudoku18vHard = // solved
		parse(".5.3..6..6....9.2.1.986....4...7...2.65.3.14.9...5...3....169.5.9.4....6..6..3.8.")
		val sudoku19vHard = // solved
		parse("....3..712..8.7..98..1.4..29.26..5......8......8..94.66..9.5..43..4.8..514..2....")
		val sudoku20vHard = // solved
		parse(".4.3.7.9.....9.1..89.1..5..2.6....1.9..6.8..5.1....6.9..9..5.71..8.6.....2.9.1.4.")
		val sudoku = fromCS121_1
		println(sudoku.toString2)
		val Some(sudokuSolution) = sudoku.solve
		println(sudokuSolution.toString2)
	}
}